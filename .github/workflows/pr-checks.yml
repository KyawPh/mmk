name: PR Checks

on:
  pull_request:
    branches: [ master, main, develop ]
  push:
    branches: [ develop ]

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: functions/package-lock.json
    
    - name: Install dependencies
      run: |
        cd functions
        npm ci
    
    - name: Run TypeScript compilation
      run: |
        cd functions
        npm run build
    
    - name: Run ESLint
      run: |
        cd functions
        npm run lint
    
    - name: Check Prettier formatting
      run: |
        cd functions
        npm run format:check
    
    - name: Run tests
      run: |
        cd functions
        npm test -- --passWithNoTests
    
    - name: Upload build artifacts
      if: matrix.node-version == '18.x'
      uses: actions/upload-artifact@v4
      with:
        name: build-output
        path: functions/lib/
        retention-days: 1

  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run npm audit
      run: |
        cd functions
        npm audit --production --audit-level=moderate
      continue-on-error: true
    
    - name: Upload audit results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: npm-audit-results
        path: functions/npm-audit.json
        retention-days: 7

  firebase-validation:
    name: Firebase Configuration Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
    
    - name: Install Firebase CLI
      run: npm install -g firebase-tools
    
    - name: Validate Firebase configuration
      run: |
        firebase experiments:enable webframeworks
        firebase projects:list
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      continue-on-error: true
    
    - name: Check Firestore rules
      run: |
        # Validate Firestore rules syntax
        if [ -f "firestore.rules" ]; then
          echo "Firestore rules file found"
          # Basic syntax check
          cat firestore.rules | head -20
        fi
    
    - name: Check Firestore indexes
      run: |
        # Validate Firestore indexes
        if [ -f "firestore.indexes.json" ]; then
          echo "Firestore indexes file found"
          # Validate JSON syntax
          python -m json.tool firestore.indexes.json > /dev/null
        fi